{"version":3,"sources":["1.js"],"names":["time","setInterval","autoSlide","remove","arr","text","i","length","classList","slides","document","querySelectorAll","position","thisActive","querySelector","previousElementSibling","nextElementSibling","add","query","queryClass","temp","arguments","undefined","$carousel","$","flickity","prevNextButtons","pageDots","flkty","data","$cellButtonGroup","$cellButtons","find","on","filter","removeClass","eq","selectedIndex","addClass","index","this"],"mappings":"AAAA,aAAA,IAAIA,KAAOC,aAAY,WACrBC,cACC,KAECC,OAAS,SAACC,EAAKC,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC9BF,EAAIE,GAAGE,UAAUL,OAAOE,IAIxBI,OAASC,SAASC,iBAAiB,kBACvC,SAAST,YACP,IAAIU,EAAW,EACXC,EAAaH,SAASI,cAAc,+BACxC,IACEF,EAAW,EACVC,EAAaA,EAAWE,uBACzBH,KAGEA,EAAWH,OAAOF,OAAS,GAC7BJ,OAAOM,OAAQ,UACfA,OAAOG,GAAUI,mBAAmBR,UAAUS,IAAI,YAElDd,OAAOM,OAAQ,UACfA,OAAO,GAAGD,UAAUS,IAAI,WAK5B,IAAIC,MAAQ,SAACC,GAA4B,IAAhBC,IAAgBC,UAAAd,OAAA,QAAAe,IAAAD,UAAA,KAAAA,UAAA,GACvC,OAAOD,EACHV,SAASI,cAAcK,GACvBT,SAASC,iBAAiBQ,IAiE5BI,UAAYC,EAAE,4BAA4BC,SAAS,CACrDC,iBAAiB,EACjBC,UAAU,IAERC,MAAQL,UAAUM,KAAK,YACvBC,iBAAmBN,EAAE,wBACrBO,aAAeD,iBAAiBE,KAAK,WAEzCT,UAAUU,GAAG,mBAAmB,WAC9BF,aAAaG,OAAO,gBAAgBC,YAAY,eAChDJ,aAAaK,GAAGR,MAAMS,eAAeC,SAAS,kBAGhDR,iBAAiBG,GAAG,QAAS,WAAW,WACtC,IAAIM,EAAQf,EAAEgB,MAAMD,QACpBhB,UAAUE,SAAS,SAAUc,MAE/Bf,EAAE,qBAAqBS,GAAG,SAAS,WACjCV,UAAUE,SAAS,YAAY,MAEjCD,EAAE,iBAAiBS,GAAG,SAAS,WAC7BV,UAAUE,SAAS,QAAQ","file":"1.js","sourcesContent":["let time = setInterval(function () {\r\n  autoSlide();\r\n}, 4000);\r\n\r\nlet remove = (arr, text) => {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    arr[i].classList.remove(text);\r\n  }\r\n};\r\n\r\nlet slides = document.querySelectorAll(\".hero__wrapper\");\r\nfunction autoSlide() {\r\n  var position = 0;\r\n  var thisActive = document.querySelector(\".hero .hero__wrapper.active\");\r\n  for (\r\n    position = 0;\r\n    (thisActive = thisActive.previousElementSibling);\r\n    position++\r\n  ) {}\r\n\r\n  if (position < slides.length - 1) {\r\n    remove(slides, \"active\");\r\n    slides[position].nextElementSibling.classList.add(\"active\");\r\n  } else {\r\n    remove(slides, \"active\");\r\n    slides[0].classList.add(\"active\");\r\n  }\r\n}\r\n\r\n//slide// init Flickity\r\nlet query = (queryClass, temp = true) => {\r\n  return temp\r\n    ? document.querySelector(queryClass)\r\n    : document.querySelectorAll(queryClass);\r\n};\r\n\r\n// let elem = query(\".products .main-carousel\");\r\n// let flkty = new Flickity(elem, {\r\n//   prevNextButtons: false,\r\n//   pageDots: false,\r\n// });\r\n\r\n// let cellButtonGroup = query(\".button-group--cells\");\r\n// let cellButtons = query(\".button-group--cells .button\", false);\r\n\r\n// let btn_pre = query(\".products .button--previous\");\r\n// let btn_nex = query(\".products .button--next\");\r\n// cellButtons = fizzyUIUtils.makeArray(cellButtons);\r\n\r\n// btn_pre.addEventListener(\"click\", function (e) {\r\n//   let position;\r\n//   let thisActive = query(\".button-group--cells .button.is-selected\");\r\n//   for (\r\n//     position = 0;\r\n//     (thisActive = thisActive.previousElementSibling);\r\n//     position++\r\n//   ) {}\r\n//   remove(cellButtons, \"is-selected\");\r\n\r\n//   if (position > 0) {\r\n//     cellButtons[position - 1].classList.add(\"is-selected\");\r\n//   } else {\r\n//     cellButtons[cellButtons.length - 1].classList.add(\"is-selected\");\r\n//   }\r\n//   flkty.next(true);\r\n// });\r\n\r\n// btn_nex.addEventListener(\"click\", function (e) {\r\n//   let position;\r\n//   let thisActive = query(\".button-group--cells .button.is-selected\");\r\n//   for (\r\n//     position = 0;\r\n//     (thisActive = thisActive.previousElementSibling);\r\n//     position++\r\n//   ) {}\r\n//   remove(cellButtons, \"is-selected\");\r\n\r\n//   if (position < cellButtons.length - 1) {\r\n//     cellButtons[position + 1].classList.add(\"is-selected\");\r\n//   } else {\r\n//     cellButtons[0].classList.add(\"is-selected\");\r\n//   }\r\n//   flkty.previous(true);\r\n// });\r\n\r\n// cellButtonGroup.addEventListener(\"click\", function (event) {\r\n//   if (!matchesSelector(event.target, \".button\")) {\r\n//     return;\r\n//   }\r\n\r\n//   remove(cellButtons, \"is-selected\");\r\n//   let index = cellButtons.indexOf(event.target);\r\n//   cellButtons[index].classList.add(\"is-selected\");\r\n//   flkty.select(index);\r\n// });\r\n\r\n\r\n\r\nvar $carousel = $(\".products .main-carousel\").flickity({\r\n  prevNextButtons: false,\r\n  pageDots: false,\r\n});\r\nvar flkty = $carousel.data(\"flickity\");\r\nvar $cellButtonGroup = $(\".button-group--cells\");\r\nvar $cellButtons = $cellButtonGroup.find(\".button\");\r\n\r\n$carousel.on(\"select.flickity\", function () {\r\n  $cellButtons.filter(\".is-selected\").removeClass(\"is-selected\");\r\n  $cellButtons.eq(flkty.selectedIndex).addClass(\"is-selected\");\r\n});\r\n\r\n$cellButtonGroup.on(\"click\", \".button\", function () {\r\n  var index = $(this).index();\r\n  $carousel.flickity(\"select\", index);\r\n});\r\n$(\".button--previous\").on(\"click\", function () {\r\n  $carousel.flickity(\"previous\", true);\r\n});\r\n$(\".button--next\").on(\"click\", function () {\r\n  $carousel.flickity(\"next\", true);\r\n});\r\n"]}